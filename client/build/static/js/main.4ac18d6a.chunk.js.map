{"version":3,"sources":["components/Header.jsx","context/AppReducer.js","context/GlobalState.js","components/Balance.jsx","utils/format.js","components/IncomeExpenses.jsx","components/Transaction.jsx","components/TransactionList.jsx","components/AddTransaction.jsx","App.js","index.js"],"names":["Header","AppReducer","state","action","type","loading","transactions","payload","filter","transaction","_id","error","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","getTransactions","a","axios","get","res","data","response","deleteTransaction","id","delete","addTransaction","config","headers","post","Provider","value","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","toString","replace","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","e","TransactionList","useEffect","key","AddTransaction","useState","setText","setAmount","onSubmit","preventDefault","htmlFor","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4ac18d6a.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Header() {\n  return <h2>Budget Manager</h2>;\n}\n","export default function AppReducer(state, action) {\n  switch (action.type) {\n    case \"GET_TRANSACTIONS\": {\n      return {\n        ...state,\n        loading: false,\n        transactions: action.payload\n      };\n    }\n    case \"DELETE_TRANSACTION\": {\n      return {\n        ...state,\n        transactions: state.transactions.filter(\n          transaction => transaction._id !== action.payload\n        )\n      };\n    }\n    case \"ADD_TRANSACTION\": {\n      return {\n        ...state,\n        transactions: [...state.transactions, action.payload]\n      };\n    }\n    case \"TRANSACTION_ERROR\": {\n      return {\n        ...state,\n        error: action.payload\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"./AppReducer\";\nimport axios from \"axios\";\n\n// initial state\nconst initialState = {\n  transactions: [],\n  error: null, // for any error since we're making async request\n  loading: true //for spinner\n};\n\n// creating context\nexport const GlobalContext = createContext(initialState);\n\n// provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  //Actions\n  const getTransactions = async () => {\n    try {\n      const res = await axios.get(\"/api/v1/transactions\");\n      dispatch({\n        type: \"GET_TRANSACTIONS\",\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: \"TRANSACTION_ERROR\",\n        payload: err.response.data.error\n      });\n    }\n  };\n\n  const deleteTransaction = async id => {\n    try {\n      await axios.delete(`/api/v1/transactions/${id}`);\n      dispatch({\n        type: \"DELETE_TRANSACTION\",\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: \"TRANSACTION_ERROR\",\n        payload: err.response.data.error\n      });\n    }\n  };\n  const addTransaction = async transaction => {\n    // config for axios\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    try {\n      const res = await axios.post(\"/api/v1/transactions\", transaction, config);\n\n      dispatch({\n        type: \"ADD_TRANSACTION\",\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: \"TRANSACTION_ERROR\",\n        payload: err.response.data.error\n      });\n    }\n  };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        transactions: state.transactions,\n        deleteTransaction,\n        addTransaction,\n        getTransactions,\n        error: state.error,\n        loading: state.loading\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { numberWithCommas } from \"../utils/format\";\n\nexport default function Balance() {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map(transaction => transaction.amount);\n\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n  return (\n    <>\n      <h4>Your Balance</h4>\n      <h1 id=\"balance\">${numberWithCommas(total)}</h1>\n    </>\n  );\n}\n","export function numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport default function IncomeExpenses() {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map(transaction => transaction.amount);\n\n  const income = amounts\n    .filter(item => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const expense = (\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\n    -1\n  ).toFixed(2);\n\n  return (\n    <div className=\"inc-exp-container\">\n      <div>\n        <h4>Income</h4>\n        <p className=\"money plus\">${income}</p>\n      </div>\n      <div>\n        <h4>Expense</h4>\n        <p className=\"money minus\">${expense}</p>\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport default function Transaction({ transaction }) {\n  const { deleteTransaction } = useContext(GlobalContext);\n\n  const sign = transaction.amount < 0 ? \"-\" : \"+\";\n\n  return (\n    <li className={transaction.amount < 0 ? \"minus\" : \"plus\"}>\n      {transaction.text}\n      <span>\n        {sign}${Math.abs(transaction.amount)}\n      </span>\n      <button\n        onClick={e => deleteTransaction(transaction._id)}\n        className=\"delete-btn\"\n      >\n        x\n      </button>\n    </li>\n  );\n}\n","import React, { useContext, useEffect } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport Transaction from \"./Transaction\";\n\nexport default function TransactionList() {\n  const { transactions, getTransactions } = useContext(GlobalContext);\n\n  useEffect(() => {\n    getTransactions();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <h3>History</h3>\n      <ul className=\"list\">\n        {transactions.map(transaction => (\n          <Transaction key={transaction._id} transaction={transaction} />\n        ))}\n      </ul>\n    </>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport default function AddTransaction() {\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n\n  const { addTransaction } = useContext(GlobalContext);\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const newTransaction = {\n      text,\n      amount: amount * 1\n    };\n    addTransaction(newTransaction);\n    setText(\"\");\n    setAmount(0);\n  };\n\n  return (\n    <>\n      <h3>Add new transaction</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Text</label>\n          <input\n            value={text}\n            onChange={e => setText(e.target.value)}\n            type=\"text\"\n            placeholder=\"Enter text...\"\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">\n            Amount <br />\n            (negative - expense, positive - income)\n          </label>\n          <input\n            value={amount}\n            onChange={e => setAmount(e.target.value)}\n            type=\"number\"\n            placeholder=\"Enter amount...\"\n          />\n        </div>\n        <button className=\"btn\">Add transaction</button>\n      </form>\n    </>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Balance from \"./components/Balance\";\nimport IncomeExpenses from \"./components/IncomeExpenses\";\nimport TransactionList from \"./components/TransactionList\";\nimport AddTransaction from \"./components/AddTransaction\";\n\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}